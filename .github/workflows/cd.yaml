name: Continuous Delivery

on:
  push:
    branches:
      - main

env:
  working-directory: config
  builds-directory: /var/services/homes/${{ secrets.SSH_USER }}/builds
  remote-path: /volume1/homeassistant

jobs:
  deploy:
    name: Deploy code to server
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment variables
        run: |
          echo "FILENAME=build.$(date +'%Y%m%d-%H%M%S')-${{github.sha}}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.FILENAME }}

      - name: Set up private deploy key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          cat > ~/.ssh/config <<'EOF'
          Host *
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
          EOF

      - name: Change permissions on remote server
        uses: fifsky/ssh-action@master
        with:
          command: |
            sudo mount --bind /volume1/@appdata/homeassistant ${{ env.remote-path }}
            sudo chmod -R 777 ${{ env.remote-path }}
          host: ${{ secrets.SSH_DOMAIN }}
          user: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.PRIVATE_DEPLOY_KEY }}

      - name: Copy files to server
        run: |
          tar zcvf - ${{ env.FILENAME }}/${{ env.working-directory }} | ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_DOMAIN }} "
            cat > ${{ env.builds-directory }}/build.tar.gz
            tar -xzf ${{ env.builds-directory }}/build.tar.gz -C ${{ env.builds-directory }}
            rm ${{ env.builds-directory }}/build.tar.gz
          "

      - name: Move files to appdata
        uses: fifsky/ssh-action@master
        with:
          command: |
            rsync -avhW --no-compress --progress ${{ env.builds-directory }}/${{ env.FILENAME }}/config ${{ env.remote-path }}
            sudo chown -R sc-homeassistant:sc-homeassistant ${{ env.remote-path }}/*
          host: ${{ secrets.SSH_DOMAIN }}
          user: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.PRIVATE_DEPLOY_KEY }}

      - name: Restart Home Assistant server
        uses: fifsky/ssh-action@master
        with:
          command: |
            sudo systemctl restart pkgctl-homeassistant.service
          host: ${{ secrets.SSH_DOMAIN }}
          user: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.PRIVATE_DEPLOY_KEY }}
